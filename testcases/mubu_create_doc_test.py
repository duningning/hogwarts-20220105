# NOTE: Generated By HttpRunner v3.1.6
# FROM: har/mubu.har
import pytest
from httprunner import Parameters
from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase
from testcases.mubu_login_test import TestCaseMubuLogin as MubuLogin

class TestCaseMubu(HttpRunner):
    @pytest.mark.parametrize(
        "param",
        Parameters(
            {
                "folderId": ["1ij2Ez2TdlN"],
                # "username-password": "${parameterize(request_methods/account.csv)}",
                "memberId": "${get_memberId_list()}",
            }
        ),
    )
    def test_start(self,param):
        super(TestCaseMubu, self).test_start(param)

    config = (
        Config("testcase description")
        .base_url("https://api2.$host/")
        .verify(False)
        .variables(**{
            "data_unique_id": "9a835035-8ab3-4775-8c27-573185dc3663",
            "csrf_token": "f058eca7-4abc-4d19-969b-6f19a47393b2",
            "memberId": "$memberId",
            "host": "${get_test_host()}",
            "phone": "13271433391",
            "password": "ming6932058",
            "folderId": "1ij2Ez2TdlN"
        })
    )#全局变量设置 #27

    teststeps = [
        Step(
            RunTestCase("login")
            .with_variables(**{})
            .call(MubuLogin)
            .export("jwttoken")
        ),
        Step(
            RunRequest("/v3/api/list/get_all_documents_page")
            .post("/v3/api/list/get_all_documents_page")
            .with_headers(
                **{
                    "content-length": "12",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "version": "3.0.0-2.0.0.1824",
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"start": ""})
            .teardown_hook("${get_folders_num($response)}","folders_num")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
            .assert_greater_than("${folders_num}",0)
        ),
        Step(
            RunRequest("/v3/api/user/get_user_params")
            .post("/v3/api/user/get_user_params")
            .with_headers(
                **{
                    "content-length": "0",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "sec-ch-ua-platform": '"macOS"',
                    "x-request-id": "${gen_random_request_id()}",
                    "version": "3.0.0-2.0.0.1824",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_data("")
            .validate()
            .assert_equal("status_code", 200)
            #.assert_equal("body.code", 5)
        ),
        Step(
            RunRequest("/v3/api/message/get_message_unread")
            .post("/v3/api/message/get_message_unread")
            .with_headers(
                **{
                    "content-length": "10",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "version": "3.0.0-2.0.0.1824",
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"page": 1})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/user/get_onboard_state")
            .post("/v3/api/user/get_onboard_state")
            .with_headers(
                **{
                    "content-length": "2",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "version": "3.0.0-2.0.0.1824",
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/advertisement/get")
            .post("/v3/api/advertisement/get")
            .with_headers(
                **{
                    "content-length": "10",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "version": "3.0.0-2.0.0.1824",
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"type": 1})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/list/item_count")
            .post("/v3/api/list/item_count")
            .with_headers(
                **{
                    "content-length": "30",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "version": "3.0.0-2.0.0.1824",
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"folderId": "$folderId", "source": "home"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/notify/new_tip/get")
            .post("/v3/api/notify/new_tip/get")
            .with_headers(
                **{
                    "content-length": "10",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "version": "3.0.0-2.0.0.1824",
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"type": 1})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        # Step(
        #     RunRequest("/v3/api/list/create_folder")
        #     .post("/v3/api/list/create_folder")
        #     .with_headers(
        #         **{
        #             "content-length": "39",
        #             "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
        #             "version": "3.0.0-2.0.0.1824",
        #             "sec-ch-ua-mobile": "?0",
        #             "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
        #             "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
        #             "content-type": "application/json;charset=UTF-8",
        #             "accept": "application/json, text/plain, */*",
        #             "jwt-token": "$jwttoken",
        #             "x-request-id": "${gen_random_request_id()}",
        #             "sec-ch-ua-platform": '"macOS"',
        #             "origin": "https://${host}",
        #             "sec-fetch-site": "same-site",
        #             "sec-fetch-mode": "cors",
        #             "sec-fetch-dest": "empty",
        #             "referer": "https://${host}/",
        #             "accept-encoding": "gzip, deflate, br",
        #             "accept-language": "zh-CN,zh;q=0.9",
        #         }
        #     )
        #     .with_json({"name": "hogworts-demo", "folderId": "0"})
        #     .extract()
        #     .with_jmespath("headers.server","server")
        #     .with_jmespath("body.data.folder.id","folderId") #第一个参数folderId传递优化处理
        #     .validate()
        #     .assert_equal("status_code", 200)
        #     .assert_equal("body.code", 0)
        # ),
        Step(
            RunRequest("/v3/api/notify/new_tip/get")
            .post("/v3/api/notify/new_tip/get")
            .with_headers(
                **{
                    "content-length": "10",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "version": "3.0.0-2.0.0.1824",
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"type": 1})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/list/item_count")
            .post("/v3/api/list/item_count")
            .with_headers(
                **{
                    "content-length": "41",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "version": "3.0.0-2.0.0.1824",
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"folderId": "$folderId", "source": "home"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/list/create_doc")
            .post("/v3/api/list/create_doc")
            .with_headers(
                **{
                    "content-length": "34",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "version": "3.0.0-2.0.0.1824",
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"folderId": "$folderId", "type": 0})
            .extract()
            .with_jmespath("body.data.id","docId")#第二个参数docId传递的处理
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/list/item_count")
            .post("/v3/api/list/item_count")
            .with_headers(
                **{
                    "content-length": "30",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "version": "3.0.0-2.0.0.1824",
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"folderId": 0, "source": "home"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/document/edit/get")
            .post("/v3/api/document/edit/get")
            .with_headers(
                **{
                    "content-length": "37",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "version": "3.0.0-2.0.0.1824",
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"docId": "$docId", "password": ""})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/events")
            .post("/v3/api/colla/events")
            .with_headers(
                **{
                    "content-length": "94",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json(
                {
                    "reqId": "1",
                    "type": "USER_HEARTBEAT",
                    "memberId": "$memberId",
                    "documentId": "$docId",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/refer/doc/list")
            .post("/v3/api/refer/doc/list")
            .with_headers(
                **{
                    "content-length": "29",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"targetDocId": "$docId"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/register")
            .get("/v3/api/colla/register")
            .with_headers(
                **{
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/refer/node/count")
            .post("/v3/api/refer/node/count")
            .with_headers(
                **{
                    "content-length": "29",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "version": "3.0.0-2.0.0.1824",
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"targetDocId": "$docId"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/members_v2")
            .post("/v3/api/colla/members_v2")
            .with_headers(
                **{
                    "content-length": "58",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "request-id": "members:${memberId}:1641819492966",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"memberId": "${memberId}", "documentId": "$docId"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/events")
            .post("/v3/api/colla/events")
            .with_headers(
                **{
                    "content-length": "206",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json(
                {
                    "reqId": "2",
                    "memberId": "${memberId}",
                    "type": "CURSOR",
                    "documentId": "$docId",
                    "cursor": {
                        "anchorId": "",
                        "anchorOffset": 0,
                        "anchorNodeType": "title",
                        "focusId": "",
                        "focusOffset": 0,
                        "focusNodeType": "title",
                    },
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/events")
            .post("/v3/api/colla/events")
            .with_headers(
                **{
                    "content-length": "305",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json(
                {
                    "memberId": "${memberId}",
                    "type": "CHANGE",
                    "version": 0,
                    "documentId": "$docId",
                    "events": [
                        {"name": "nameChanged", "title": "${get_random_string(10)}", "original": "dem"},
                    ],
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/refer/search_refers")
            .post("/v3/api/refer/search_refers")
            .with_headers(
                **{
                    "content-length": "52",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"docId": "$docId", "keywords": "demo",})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/events")
            .post("/v3/api/colla/events")
            .with_headers(
                **{
                    "content-length": "250",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json(
                {
                    "memberId": "${memberId}",
                    "type": "CHANGE",
                    "version": 1,
                    "documentId": "$docId",
                    "events": [
                        {
                            "name": "create",
                            "created": [
                                {
                                    "index": 0,
                                    "parentId": None,
                                    "node": {
                                        "id": "CZ1NPN0a7Q",
                                        "text": "",
                                        "modified": 1641819503950,
                                        "children": [],
                                    },
                                    "path": ["nodes", 0],
                                }
                            ],
                        }
                    ],
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/events")
            .post("/v3/api/colla/events")
            .with_headers(
                **{
                    "content-length": "294",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json(
                {
                    "memberId": "${memberId}",
                    "type": "CHANGE",
                    "version": 2,
                    "documentId": "$docId",
                    "events": [
                        {
                            "name": "update",
                            "updated": [
                                {
                                    "updated": {
                                        "id": "CZ1NPN0a7Q",
                                        "text": "<span>11</span>",
                                        "modified": 1641819505289,
                                    },
                                    "original": {
                                        "id": "CZ1NPN0a7Q",
                                        "text": "",
                                        "modified": 1641819503950,
                                    },
                                    "path": ["nodes", 0],
                                }
                            ],
                        }
                    ],
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/events")
            .post("/v3/api/colla/events")
            .with_headers(
                **{
                    "content-length": "311",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json(
                {
                    "memberId": "${memberId}",
                    "type": "CHANGE",
                    "version": 3,
                    "documentId": "$docId",
                    "events": [
                        {
                            "name": "update",
                            "updated": [
                                {
                                    "updated": {
                                        "id": "CZ1NPN0a7Q",
                                        "text": "<span>1111</span>",
                                        "modified": 1641819505596,
                                    },
                                    "original": {
                                        "id": "CZ1NPN0a7Q",
                                        "text": "<span>11</span>",
                                        "modified": 1641819505289,
                                    },
                                    "path": ["nodes", 0],
                                }
                            ],
                        }
                    ],
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/events")
            .post("/v3/api/colla/events")
            .with_headers(
                **{
                    "content-length": "250",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json(
                {
                    "memberId": "${memberId}",
                    "type": "CHANGE",
                    "version": 4,
                    "documentId": "$docId",
                    "events": [
                        {
                            "name": "create",
                            "created": [
                                {
                                    "index": 1,
                                    "parentId": None,
                                    "node": {
                                        "id": "2F9RmmawAF",
                                        "text": "",
                                        "modified": 1641819506912,
                                        "children": [],
                                    },
                                    "path": ["nodes", 1],
                                }
                            ],
                        }
                    ],
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/events")
            .post("/v3/api/colla/events")
            .with_headers(
                **{
                    "content-length": "293",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json(
                {
                    "memberId": "${memberId}",
                    "type": "CHANGE",
                    "version": 5,
                    "documentId": "$docId",
                    "events": [
                        {
                            "name": "update",
                            "updated": [
                                {
                                    "updated": {
                                        "id": "2F9RmmawAF",
                                        "text": "<span>2</span>",
                                        "modified": 1641819508062,
                                    },
                                    "original": {
                                        "id": "2F9RmmawAF",
                                        "text": "",
                                        "modified": 1641819506912,
                                    },
                                    "path": ["nodes", 1],
                                }
                            ],
                        }
                    ],
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/events")
            .post("/v3/api/colla/events")
            .with_headers(
                **{
                    "content-length": "310",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json(
                {
                    "memberId": "${memberId}",
                    "type": "CHANGE",
                    "version": 6,
                    "documentId": "$docId",
                    "events": [
                        {
                            "name": "update",
                            "updated": [
                                {
                                    "updated": {
                                        "id": "2F9RmmawAF",
                                        "text": "<span>2222</span>",
                                        "modified": 1641819508568,
                                    },
                                    "original": {
                                        "id": "2F9RmmawAF",
                                        "text": "<span>2</span>",
                                        "modified": 1641819508062,
                                    },
                                    "path": ["nodes", 1],
                                }
                            ],
                        }
                    ],
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/events")
            .post("/v3/api/colla/events")
            .with_headers(
                **{
                    "content-length": "88",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json(
                {
                    "reqId": "16",
                    "type": "UNWATCH",
                    "memberId": "${memberId}",
                    "documentId": "$docId",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/list/item_count")
            .post("/v3/api/list/item_count")
            .with_headers(
                **{
                    "content-length": "30",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "version": "3.0.0-2.0.0.1824",
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"folderId": 0, "source": "home"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/notify/new_tip/get")
            .post("/v3/api/notify/new_tip/get")
            .with_headers(
                **{
                    "content-length": "10",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "version": "3.0.0-2.0.0.1824",
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"type": 1})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
    ]


if __name__ == "__main__":
    TestCaseMubu().test_start()
