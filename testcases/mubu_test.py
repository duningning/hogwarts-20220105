# NOTE: Generated By HttpRunner v3.1.6
# FROM: har/mubu.har


from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase


class TestCaseMubu(HttpRunner):

    config = (
        Config("testcase description")
        .base_url("https://api2.$host/")
        .verify(False)
        .variables(**{
            "data_unique_id": "9a835035-8ab3-4775-8c27-573185dc3663",
            "csrf_token": "f058eca7-4abc-4d19-969b-6f19a47393b2",
            "memberId": "5806779403337203",
            "host": "${get_test_host()}",
            "phone": "13271433391",
            "password": "ming6932058",
        })
    )#全局变量设置 #27

    teststeps = [
        Step(
            RunRequest("/v3/api/user/phone_login")
            .post("/v3/api/user/phone_login")
            .with_headers(
                **{
                    "content-length": "65",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "version": "3.0.0-2.0.0.1824",
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "",
                    "x-request-id": "${gen_random_request_id()}",#动态函数运算的引用
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json(
                {"phone": "${phone}", "password": "${password}", "callbackType": 0}
            )
            .extract()
            .with_jmespath('body.data.token',"jwttoken")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/app")
            .get("https://${host}/app")
            .with_headers(
                **{
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "sec-ch-ua-platform": '"macOS"',
                    "upgrade-insecure-requests": "1",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9",
                    "sec-fetch-site": "same-origin",
                    "sec-fetch-mode": "navigate",
                    "sec-fetch-user": "?1",
                    "sec-fetch-dest": "document",
                    "referer": "https://${host}/home",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_cookies(
                **{
                    "data_unique_id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "csrf_token": "$csrf_token",
                    "SESSION": "1509130f-ac9d-42a0-9d62-b0cabf5b3ad1",
                    "language": "en-US",
                    "country": "US",
                    "Hm_lvt_4426cbb0486a79ea049b4ad52d81b504": "1641819354",
                    "_ga": "GA1.2.233353649.1641819355",
                    "_gid": "GA1.2.290704432.1641819355",
                    "SLARDAR_WEB_ID": "453f908a-edac-4b9d-b0e6-74e4f0c4f04e",
                    "Hm_lpvt_4426cbb0486a79ea049b4ad52d81b504": "1641819402",
                    "Jwt-Token": "$jwttoken",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("/v3/api/user/profile")
            .post("/v3/api/user/profile")
            .with_headers(
                **{
                    "content-length": "0",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "sec-ch-ua-platform": '"macOS"',
                    "x-request-id": "${gen_random_request_id()}",
                    "version": "3.0.0-2.0.0.1824",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_data("")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/activity/five_years/participation")
            .post("/v3/api/activity/five_years/participation")
            .with_headers(
                **{
                    "content-length": "0",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "sec-ch-ua-platform": '"macOS"',
                    "x-request-id": "${gen_random_request_id()}",
                    "version": "3.0.0-2.0.0.1824",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_data("")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 4011)
            .assert_equal("body.msg", "unknown error")
        ),
        Step(
            RunRequest("/v3/api/list/star_relation/get")
            .get("/v3/api/list/star_relation/get")
            .with_headers(
                **{
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "sec-ch-ua-platform": '"macOS"',
                    "x-request-id": "${gen_random_request_id()}",
                    "version": "3.0.0-2.0.0.1824",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/list/get_all_documents_page")
            .post("/v3/api/list/get_all_documents_page")
            .with_headers(
                **{
                    "content-length": "12",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "version": "3.0.0-2.0.0.1824",
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"start": ""})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/user/get_user_params")
            .post("/v3/api/user/get_user_params")
            .with_headers(
                **{
                    "content-length": "0",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "sec-ch-ua-platform": '"macOS"',
                    "x-request-id": "${gen_random_request_id()}",
                    "version": "3.0.0-2.0.0.1824",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_data("")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/message/get_message_unread")
            .post("/v3/api/message/get_message_unread")
            .with_headers(
                **{
                    "content-length": "10",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "version": "3.0.0-2.0.0.1824",
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"page": 1})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/user/get_onboard_state")
            .post("/v3/api/user/get_onboard_state")
            .with_headers(
                **{
                    "content-length": "2",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "version": "3.0.0-2.0.0.1824",
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/advertisement/get")
            .post("/v3/api/advertisement/get")
            .with_headers(
                **{
                    "content-length": "10",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "version": "3.0.0-2.0.0.1824",
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"type": 1})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/list/item_count")
            .post("/v3/api/list/item_count")
            .with_headers(
                **{
                    "content-length": "30",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "version": "3.0.0-2.0.0.1824",
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"folderId": 0, "source": "home"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/notify/new_tip/get")
            .post("/v3/api/notify/new_tip/get")
            .with_headers(
                **{
                    "content-length": "10",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "version": "3.0.0-2.0.0.1824",
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"type": 1})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/list/create_folder")
            .options("/v3/api/list/create_folder")
            .with_headers(
                **{
                    "accept": "*/*",
                    "access-control-request-method": "POST",
                    "access-control-request-headers": "content-type,data-unique-id,jwt-token,version,x-request-id",
                    "origin": "https://${host}",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("/v3/api/list/create_folder")
            .post("/v3/api/list/create_folder")
            .with_headers(
                **{
                    "content-length": "39",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "version": "3.0.0-2.0.0.1824",
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"name": "hogworts-demo", "folderId": "0"})
            .extract()
            .with_jmespath("headers.server","server")
            .with_jmespath("body.data.folder.id","folderId") #第一个参数folderId传递优化处理
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/notify/new_tip/get")
            .post("/v3/api/notify/new_tip/get")
            .with_headers(
                **{
                    "content-length": "10",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "version": "3.0.0-2.0.0.1824",
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"type": 1})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/list/item_count")
            .post("/v3/api/list/item_count")
            .with_headers(
                **{
                    "content-length": "41",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "version": "3.0.0-2.0.0.1824",
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"folderId": "$folderId", "source": "home"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/list/create_doc")
            .options("/v3/api/list/create_doc")
            .with_headers(
                **{
                    "accept": "*/*",
                    "access-control-request-method": "POST",
                    "access-control-request-headers": "content-type,data-unique-id,jwt-token,version,x-request-id",
                    "origin": "https://${host}",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("/v3/api/list/create_doc")
            .post("/v3/api/list/create_doc")
            .with_headers(
                **{
                    "content-length": "34",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "version": "3.0.0-2.0.0.1824",
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"folderId": "$folderId", "type": 0})
            .extract()
            .with_jmespath("body.data.id","docId")#第二个参数docId传递的处理
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/list/item_count")
            .post("/v3/api/list/item_count")
            .with_headers(
                **{
                    "content-length": "30",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "version": "3.0.0-2.0.0.1824",
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"folderId": 0, "source": "home"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/document/edit/get")
            .options("/v3/api/document/edit/get")
            .with_headers(
                **{
                    "accept": "*/*",
                    "access-control-request-method": "POST",
                    "access-control-request-headers": "content-type,data-unique-id,jwt-token,version,x-request-id",
                    "origin": "https://${host}",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("/v3/api/document/edit/get")
            .post("/v3/api/document/edit/get")
            .with_headers(
                **{
                    "content-length": "37",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "version": "3.0.0-2.0.0.1824",
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"docId": "$docId", "password": ""})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/register")
            .options("/v3/api/colla/register")
            .with_headers(
                **{
                    "accept": "*/*",
                    "access-control-request-method": "GET",
                    "access-control-request-headers": "data-unique-id,jwt-token,x-request-id",
                    "origin": "https://${host}",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("/v3/api/colla/events")
            .options("/v3/api/colla/events")
            .with_headers(
                **{
                    "accept": "*/*",
                    "access-control-request-method": "POST",
                    "access-control-request-headers": "content-type,data-unique-id,jwt-token,x-request-id",
                    "origin": "https://${host}",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("/v3/api/refer/doc/list")
            .options("/v3/api/refer/doc/list")
            .with_headers(
                **{
                    "accept": "*/*",
                    "access-control-request-method": "POST",
                    "access-control-request-headers": "content-type,data-unique-id,jwt-token,x-request-id",
                    "origin": "https://${host}",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("/v3/api/refer/node/count")
            .options("/v3/api/refer/node/count")
            .with_headers(
                **{
                    "accept": "*/*",
                    "access-control-request-method": "POST",
                    "access-control-request-headers": "content-type,data-unique-id,jwt-token,version,x-request-id",
                    "origin": "https://${host}",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("/v3/api/colla/events")
            .post("/v3/api/colla/events")
            .with_headers(
                **{
                    "content-length": "94",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json(
                {
                    "reqId": "1",
                    "type": "USER_HEARTBEAT",
                    "memberId": "$memberId",
                    "documentId": "$docId",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/refer/doc/list")
            .post("/v3/api/refer/doc/list")
            .with_headers(
                **{
                    "content-length": "29",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"targetDocId": "$docId"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/register")
            .get("/v3/api/colla/register")
            .with_headers(
                **{
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/refer/node/count")
            .post("/v3/api/refer/node/count")
            .with_headers(
                **{
                    "content-length": "29",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "version": "3.0.0-2.0.0.1824",
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"targetDocId": "$docId"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/members_v2")
            .options("/v3/api/colla/members_v2")
            .with_headers(
                **{
                    "accept": "*/*",
                    "access-control-request-method": "POST",
                    "access-control-request-headers": "content-type,data-unique-id,jwt-token,request-id,x-request-id",
                    "origin": "https://${host}",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("/v3/api/colla/members_v2")
            .post("/v3/api/colla/members_v2")
            .with_headers(
                **{
                    "content-length": "58",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "request-id": "members:${memberId}:1641819492966",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"memberId": "${memberId}", "documentId": "$docId"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/events")
            .post("/v3/api/colla/events")
            .with_headers(
                **{
                    "content-length": "206",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json(
                {
                    "reqId": "2",
                    "memberId": "${memberId}",
                    "type": "CURSOR",
                    "documentId": "$docId",
                    "cursor": {
                        "anchorId": "",
                        "anchorOffset": 0,
                        "anchorNodeType": "title",
                        "focusId": "",
                        "focusOffset": 0,
                        "focusNodeType": "title",
                    },
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/events")
            .post("/v3/api/colla/events")
            .with_headers(
                **{
                    "content-length": "305",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json(
                {
                    "memberId": "${memberId}",
                    "type": "CHANGE",
                    "version": 0,
                    "documentId": "$docId",
                    "events": [
                        {"name": "nameChanged", "title": "d", "original": ""},
                        {"name": "nameChanged", "title": "de", "original": "d"},
                        {"name": "nameChanged", "title": "dem", "original": "de"},
                        {"name": "nameChanged", "title": "demo", "original": "dem"},
                    ],
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/refer/search_refers")
            .options("/v3/api/refer/search_refers")
            .with_headers(
                **{
                    "accept": "*/*",
                    "access-control-request-method": "POST",
                    "access-control-request-headers": "content-type,data-unique-id,jwt-token,x-request-id",
                    "origin": "https://${host}",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("/v3/api/refer/search_refers")
            .post("/v3/api/refer/search_refers")
            .with_headers(
                **{
                    "content-length": "52",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"docId": "$docId", "keywords": "demo", "option": 1})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/events")
            .post("/v3/api/colla/events")
            .with_headers(
                **{
                    "content-length": "250",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json(
                {
                    "memberId": "${memberId}",
                    "type": "CHANGE",
                    "version": 1,
                    "documentId": "$docId",
                    "events": [
                        {
                            "name": "create",
                            "created": [
                                {
                                    "index": 0,
                                    "parentId": None,
                                    "node": {
                                        "id": "CZ1NPN0a7Q",
                                        "text": "",
                                        "modified": 1641819503950,
                                        "children": [],
                                    },
                                    "path": ["nodes", 0],
                                }
                            ],
                        }
                    ],
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/events")
            .post("/v3/api/colla/events")
            .with_headers(
                **{
                    "content-length": "294",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json(
                {
                    "memberId": "${memberId}",
                    "type": "CHANGE",
                    "version": 2,
                    "documentId": "$docId",
                    "events": [
                        {
                            "name": "update",
                            "updated": [
                                {
                                    "updated": {
                                        "id": "CZ1NPN0a7Q",
                                        "text": "<span>11</span>",
                                        "modified": 1641819505289,
                                    },
                                    "original": {
                                        "id": "CZ1NPN0a7Q",
                                        "text": "",
                                        "modified": 1641819503950,
                                    },
                                    "path": ["nodes", 0],
                                }
                            ],
                        }
                    ],
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/events")
            .post("/v3/api/colla/events")
            .with_headers(
                **{
                    "content-length": "311",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json(
                {
                    "memberId": "${memberId}",
                    "type": "CHANGE",
                    "version": 3,
                    "documentId": "$docId",
                    "events": [
                        {
                            "name": "update",
                            "updated": [
                                {
                                    "updated": {
                                        "id": "CZ1NPN0a7Q",
                                        "text": "<span>1111</span>",
                                        "modified": 1641819505596,
                                    },
                                    "original": {
                                        "id": "CZ1NPN0a7Q",
                                        "text": "<span>11</span>",
                                        "modified": 1641819505289,
                                    },
                                    "path": ["nodes", 0],
                                }
                            ],
                        }
                    ],
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/events")
            .post("/v3/api/colla/events")
            .with_headers(
                **{
                    "content-length": "250",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json(
                {
                    "memberId": "${memberId}",
                    "type": "CHANGE",
                    "version": 4,
                    "documentId": "$docId",
                    "events": [
                        {
                            "name": "create",
                            "created": [
                                {
                                    "index": 1,
                                    "parentId": None,
                                    "node": {
                                        "id": "2F9RmmawAF",
                                        "text": "",
                                        "modified": 1641819506912,
                                        "children": [],
                                    },
                                    "path": ["nodes", 1],
                                }
                            ],
                        }
                    ],
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/events")
            .post("/v3/api/colla/events")
            .with_headers(
                **{
                    "content-length": "293",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json(
                {
                    "memberId": "${memberId}",
                    "type": "CHANGE",
                    "version": 5,
                    "documentId": "$docId",
                    "events": [
                        {
                            "name": "update",
                            "updated": [
                                {
                                    "updated": {
                                        "id": "2F9RmmawAF",
                                        "text": "<span>2</span>",
                                        "modified": 1641819508062,
                                    },
                                    "original": {
                                        "id": "2F9RmmawAF",
                                        "text": "",
                                        "modified": 1641819506912,
                                    },
                                    "path": ["nodes", 1],
                                }
                            ],
                        }
                    ],
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/events")
            .post("/v3/api/colla/events")
            .with_headers(
                **{
                    "content-length": "310",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json(
                {
                    "memberId": "${memberId}",
                    "type": "CHANGE",
                    "version": 6,
                    "documentId": "$docId",
                    "events": [
                        {
                            "name": "update",
                            "updated": [
                                {
                                    "updated": {
                                        "id": "2F9RmmawAF",
                                        "text": "<span>2222</span>",
                                        "modified": 1641819508568,
                                    },
                                    "original": {
                                        "id": "2F9RmmawAF",
                                        "text": "<span>2</span>",
                                        "modified": 1641819508062,
                                    },
                                    "path": ["nodes", 1],
                                }
                            ],
                        }
                    ],
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/events")
            .post("/v3/api/colla/events")
            .with_headers(
                **{
                    "content-length": "88",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json(
                {
                    "reqId": "16",
                    "type": "UNWATCH",
                    "memberId": "${memberId}",
                    "documentId": "$docId",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/list/item_count")
            .post("/v3/api/list/item_count")
            .with_headers(
                **{
                    "content-length": "30",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "version": "3.0.0-2.0.0.1824",
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"folderId": 0, "source": "home"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/notify/new_tip/get")
            .post("/v3/api/notify/new_tip/get")
            .with_headers(
                **{
                    "content-length": "10",
                    "sec-ch-ua": '" Not;A Brand";v="99", "Google Chrome";v="97", "Chromium";v="97"',
                    "version": "3.0.0-2.0.0.1824",
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
                    "data-unique-id": "9a835035-8ab3-4775-8c27-573185dc3663",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwttoken",
                    "x-request-id": "${gen_random_request_id()}",
                    "sec-ch-ua-platform": '"macOS"',
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"type": 1})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
    ]


if __name__ == "__main__":
    TestCaseMubu().test_start()
